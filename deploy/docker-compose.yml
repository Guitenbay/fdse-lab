version: '3'

# 当容器内应用希望连接其他服务时
# 需要先让他们在一个网络中，然后通过 container_name 相互连接
# 注意：连接的域名需要全部改成 container_name
networks: 
  fdse-net:
    driver: bridge

services:
  mysql-fdse:
    # 指定镜像和版本
    image: mysql:5.7
    # 自启动
    restart: on-failure
    environment:
      TZ: Asis/Shanghai
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_ROOT_HOST: ${MYSQL_ROOT_HOST}
    volumes:
      # 挂载数据目录
      - "${MYSQL_DIR}/data:/var/lib/mysql"
      # 挂载配置文件目录
      - "${MYSQL_DIR}/config/my.cnf:/etc/mysql/conf.d/my.cnf"
      # 挂载初始数据库数据目录
      - "${MYSQL_DIR}/init:/docker-entrypoint-initdb.d/"
    networks: 
      - fdse-net

  spring-fdse:
    # 从 spring 文件夹内的 Dockerfile 构建镜像
    build: ${SPRING_BOOT_DIR}/.
    restart: on-failure
    depends_on: 
      - mysql-fdse
    networks: 
      - fdse-net

  nginx-fdse:
    # 镜像:版本
    image: nginx:latest 
    restart: on-failure
    # 映射容器80端口到本地80端口
    ports:
      - "80:80"
      - "8005:8005"
    # 数据卷 映射本地文件到容器
    volumes:
    # 映射 nginx.conf 文件到容器的 /etc/nginx/conf.d 目录并覆盖 default.conf 文件
      - ${NGINX_DIR}/nginx.conf:/etc/nginx/conf.d/default.conf
    # 映射build文件夹到容器的 /usr/share/nginx/html 文件夹
      - ${NGINX_DIR}/build:/usr/share/nginx/html
    # 覆盖容器启动后默认执行的命令。
    depends_on: 
      - spring-fdse
    networks:
      - fdse-net
    command: /bin/bash -c "nginx -g 'daemon off;'"